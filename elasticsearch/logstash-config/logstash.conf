input {
  file {
    path => '/usr/share/logstash/input-data/cities_canada-usa.tsv'
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  grok {
    match => {"message" => "%{INT:GeonamesId}	%{DATA:Name}	%{DATA:ASCIIName}	%{DATA:AlternateNames}	%{DATA:Latitude}	%{DATA:Longitude}	%{DATA:FeatureClass}	%{DATA:FeatureCode}	%{DATA:CountryCode}	%{DATA:CountryCodeAlternatives}	%{DATA:Admin1Code}	%{DATA:Admin2Code}	%{DATA:Admin3Code}	%{DATA:Admin4Code}	%{DATA:Population}	%{DATA:Elevation}	%{DATA:DEM}	%{DATA:Timezone}	%{GREEDYDATA:ModificationDate}"}
    tag_on_failure => ['grok-failed']
  }

  date {
    locale => "en"
    match => ["ModificationDate", "YYYY-MM-dd"]
    timezone => "UTC"
    target => "ModificationDate"
  }

  mutate {
    convert => { "Population" => "integer" }
    convert => { "Elevation" => "integer" }
  }

  if [Latitude] {
    mutate {
      add_field => {
        "[location][lat]" => "%{Latitude}"
        "[location][lon]" => "%{Longitude}"
      }
    }
    mutate {
      convert => {
        "[location][lat]" => "float"
        "[location][lon]" => "float"
      }
    }
  }

  if [Admin1Code] {
    translate {
      dictionary_path => '/usr/share/logstash/input-data/admin1codes.yml'
      field => "Admin1Code"
      destination => "StateName"
    }
  }

  if [CountryCode] {
    translate {
      dictionary => {
        "CA" => "Canada"
        "US" => "United States of America"
      }
      field => "CountryCode"
      destination => "CountryName"
    }
  }


  mutate {
    remove_field => [ "message",
        "host",
        "path",
        "@version",
        "@timestamp",
        "Latitude",
        "Longitude",
        "AlternateNames",
        "FeatureClass",
        "FeatureCode",
        "CountryCode",
        "CountryCodeAlternatives",
        "Admin1Code",
        "Admin2Code",
        "Admin3Code",
        "Admin4Code",
        "Elevation",
        "geom_location",
        "DEM",
        "tags"]
  }


}

output {
  # used for debuging/testing your parsing result
  #stdout {
  #    stdout {}
  #}

  elasticsearch {
    hosts => ['elasticsearch:9200']
    index => 'cities'
    document_id => '%{GeonamesId}'
  }
}
