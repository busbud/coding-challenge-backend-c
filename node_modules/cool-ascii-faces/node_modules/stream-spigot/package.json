{
  "name": "stream-spigot",
  "version": "3.0.5",
  "description": "A readable stream generator, useful for testing or converting simple functions into Readable streams.",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/brycebaril/node-stream-spigot"
  },
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "node test/"
  },
  "browser": {
    "readable-stream/readable": "_stream_readable"
  },
  "keywords": [
    "streams2",
    "testing",
    "readable"
  ],
  "author": {
    "name": "Bryce B. Baril"
  },
  "license": "MIT",
  "devDependencies": {
    "concat-stream": "~1.4.7",
    "tape": "~3.4.0"
  },
  "dependencies": {
    "readable-stream": "~1.1.0",
    "xtend": "~4.0.0"
  },
  "readme": "Stream Spigot\n=============\n\n[![NPM](https://nodei.co/npm/stream-spigot.png)](https://nodei.co/npm/stream-spigot/)\n\n[![david-dm](https://david-dm.org/brycebaril/node-stream-spigot.png)](https://david-dm.org/brycebaril/node-stream-spigot/)\n[![david-dm](https://david-dm.org/brycebaril/node-stream-spigot/dev-status.png)](https://david-dm.org/brycebaril/node-stream-spigot#info=devDependencies/)\n\n\nA generator for (streams2) Readable streams, useful for testing or converting simple lazy functions into Readable streams, or just creating Readable streams without all the boilerplate.\n\n```javascript\nvar spigot = require(\"stream-spigot\")\n\nspigot.array([\"ABCDEFG\"]).pipe(process.stdout)\n// ABCDEFG\n\nspigot.array([\"ABC\", \"DEF\", \"G\"]).pipe(process.stdout)\n// same as: (short form)\nspigot([\"ABC\", \"DEF\", \"G\"]).pipe(process.stdout)\n// ABCDEFG\n\n\n// Create a stream out of a synchronous generator:\nvar count = 0\nfunction gen() {\n  if (count++ < 5) {\n    return {val: count}\n  }\n}\n\nspigot.sync({objectMode: true}, gen).pipe(...)\n/*\n{val: 1}\n{val: 2}\n{val: 3}\n{val: 4}\n{val: 5}\n*/\n\n\n// Create a more traditional Readable stream:\nvar source = spigot({objectMode: true}, function () {\n  var self = this\n  iterator.next(function (err, value) {\n    if (err) return self.emit(\"error\", err)\n    self.push(value)\n  })\n})\n\nsource.pipe(...)\n\n```\n\nUsage\n=====\n\nspigot([options,] _read)\n---\n\nCreate a Readable stream instance with the specified _read method. Your _read method should follow the normal [stream.Readable _read](http://nodejs.org/api/stream.html#stream_readable_read_size_1) syntax. (I.e. it should call `this.push(chunk)`)\n\nspigot([options, ], array)\n---\n\nCreate a Readable stream instance that will emit each member of the specified array until it is consumed. Creates a copy of the given array and consumes that -- if this will cause memory issues, consider implementing your own _read function to consume your array.\n\nvar Spigot = spigot.ctor([options,], _read)\n---\n\nSame as the above except provides a constructor for your Readable class. You can then create instances by using either `var source = new Spigot()` or `var source = Spigot()`.\n\nvar Spigot = spigot.ctor([options,], array)\n---\n\nSame as the above except provides a constructor for your Readable class. You can then create instances by using either `var source = new Spigot()` or `var source = Spigot()`.\n\nspigot.array([options, ], array)\n---\n\nA manual version of the above to specify an array.\n\n\nspigot.sync([options,] fn)\n------------------------\n\nCreate a readable instance providing a synchronous generator function. It will internally wrap your synchronous function as an async function.\n\nOptions\n-------\n\nAccepts standard [readable-stream](http://npmjs.org/api/stream.html) options.\n\nLICENSE\n=======\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/brycebaril/node-stream-spigot/issues"
  },
  "homepage": "https://github.com/brycebaril/node-stream-spigot",
  "_id": "stream-spigot@3.0.5",
  "dist": {
    "shasum": "7fd74319304b5d8999b633ed4e2296d1aa6ecd08"
  },
  "_from": "stream-spigot@~3.0.3",
  "_resolved": "https://registry.npmjs.org/stream-spigot/-/stream-spigot-3.0.5.tgz"
}
