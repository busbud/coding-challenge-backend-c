{
  "name": "prime",
  "homepage": "https://github.com/mootools/prime",
  "version": "0.3.2",
  "main": "./index.js",
  "description": "prime, an OOP JavaScript library for node and the web.",
  "keywords": [
    "library",
    "framework",
    "es5",
    "class",
    "array",
    "object"
  ],
  "author": {
    "name": "Valerio Proietti",
    "email": "@kamicane",
    "url": "http://mad4milk.net"
  },
  "contributors": [
    {
      "name": "Arian Stolwijk",
      "email": "@arian",
      "url": "http://aryweb.nl"
    },
    {
      "name": "Cristian Carlesso",
      "email": "@kentaromiura",
      "url": "http://github.com/kentaromiura"
    }
  ],
  "bugs": {
    "url": "https://github.com/mootools/prime/issues"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/mootools/prime.git"
  },
  "dependencies": {},
  "devDependencies": {
    "mocha": "1.8",
    "mocha-phantomjs": "2.0",
    "expect.js": "0.1",
    "wrapup": "0.10"
  },
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "readme": "#prime |prÄ«m|\n\n1. fundamental, basic, essential.\n2. make (something) ready for use or action.\n3. archetypal, prototypical, typical, classic.\n\n## Description\n\nprime is an Object Oriented JavaScript library. It helps you with prototypal inheritance and contains generic utilities for every-day JavaScripting.\n\nNo Native JavaScript Objects were harmed in the making of this library.\n\n## Modules Overview\n\nA short overview of the available modules. For more information, refer to the [documentation](https://github.com/mootools/prime/blob/master/doc/prime.md).\n\n### prime\n\nThe function to create new primes.\n\n```js\nvar prime = require(\"prime\")\n\nvar Animal = prime({\n    say: function(){\n        return \"!!\"\n    }\n})\n\nvar Emitter = require(\"prime/emitter\")\n\nvar Cat = prime({\n    inherits: Animal,\n    mixin: Emitter,\n    say: function(){\n        return \"meaow\" + Cat.parent.say.call(this)\n    }\n})\n```\n\n### prime/emitter\n\nThe event emitter.\n\n```js\nvar Emitter = require(\"prime/emitter\")\n\nvar Dog = prime({\n    inherits: Animal,\n    say: function(){\n        var word = \"wuff\" + Dog.parent.say.call(this)\n        this.emit(\"say\", word)\n        return word\n    }\n})\n\nDog.implement(new Emitter)\n\nvar barkley = new Dog\n\nbarkley.on(\"say\", function(word){\n    console.log(\"barkley barked\", word)\n})\n```\n\n### prime/map\n\nSimple WeakMap-like object.\n\n```js\nvar Map = require(\"prime/map\")\n\nvar map = new Map()\n\nmap.set(domElement, \"header\")\nmap.set(domElement2, \"footer\")\nmap.get(domElement) // \"header\"\nmap.get(domElement2) // \"footer\"\n```\n\n### prime/type\n\nType checker.\n\n```js\nvar type = require(\"prime/type\")\n\ntype(\"string\") // \"string\"\ntype([]) // \"array\"\ntype(function(){}) // \"function\"\ntype(/regexp/) // \"regexp\"\ntype(new Date) // \"date\"\ntype(10) // \"number\"\ntype(false) // \"boolean\"\ntype({}) // \"object\"\ntype(arguments) // \"object\"\n\ntype(null) // \"null\"\ntype(undefined) // \"null\"\ntype(NaN) // \"null\"\n```\n\n### prime/shell\n\nWraps every type in a special function containing every available method.\nUse valueOf() / toString() to get the bare value.\n\n```js\nvar _ = require(\"prime/shell\")\n_([10, 20, 30]).indexOf(1).times(function(n){}).valueOf() // 10\ndocument.title = _([\"hello-mootools\"]).get(0).camelize()\n```\n\n### prime/array\n\nA composite module of all the methods modules.\nAvailable methods: every, filter, forEach, indexOf, map, remove, slice, some\n\n```js\nvar array = require(\"prime/array\")\narray.indexOf([1,2,3], 1)\narray([1,2,3]).indexOf(1)\n```\n\nRequiring individual methods as generics:\n\n```js\nvar indexOf = require(\"prime/array/indexOf\")\nindexOf([1,2,3], 1)\n```\n\n### prime/object\n\nA composite module of all the methods modules.\nAvailable methods: count, create, every, filter, forIn, forOwn, indexOf, keys, map, mixIn, remove, some, values\n\n```js\nvar object = require(\"prime/object\")\nobject.count({a:1})\nobject({a:1}).count()\n```\n\nRequiring individual methods as generics:\n\n```js\nvar count = require(\"prime/object/count\")\ncount({a:1})\n```\n\n### prime/string\n\nA composite module of all the methods modules.\nAvailable methods: camelize, capitalize, clean, escape, hyphenate, trim\n\n```js\nvar string = require(\"prime/string\")\nstring.trim(\"  asdfg  \")\nstring(\"  asdfg  \").trim()\n```\n\nRequiring individual methods as generics:\n\n```js\nvar trim = require(\"prime/string/trim\")\ntrim(\" asdfg \")\n```\n\n### prime/number\n\nA composite module of all the methods modules.\nAvailable methods: limit, random, round, times\n\n```js\nvar fn = require(\"prime/number\")\nnumber.times(10, function(n){})\nnumber(10).times(function(n){})\n```\n\nRequiring individual methods as generics:\n\n```js\nvar times = require(\"prime/number/times\")\ntimes(10, function(n){})\n```\n\n### prime/function\n\nA composite module of all the methods modules.\nAvailable methods: bind\n\n```js\nvar fn = require(\"prime/function\")\nfn.bind(function(){}, object)\nfn(function(){}).bind(object)\n```\n\nRequiring individual methods as generics:\n\n```js\nvar bind = require(\"prime/function/bind\")\nbind(function(){}, object)\n```\n\n### prime/date\n\nA composite module of all the methods modules.\nAvailable methods: now\n\n```js\nvar date = require(\"prime/date\")\ndate.now()\n```\n\nRequiring individual methods as generics:\n\n```js\nvar now = require(\"date/now\")\nnow()\n```\n\n\n[![Build Status](https://secure.travis-ci.org/mootools/prime.png?branch=master)](http://travis-ci.org/mootools/prime)\n",
  "readmeFilename": "README.md",
  "_id": "prime@0.3.2",
  "dist": {
    "shasum": "c852c42d0363449a4341a2e9086ae5f89078463f"
  },
  "_from": "prime@0.3.x",
  "_resolved": "https://registry.npmjs.org/prime/-/prime-0.3.2.tgz"
}
