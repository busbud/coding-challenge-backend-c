var __$coverCall, __$coverInit, __$coverInitRange;
(function(fs){
	"use strict";
	var update = function(cb){
		return function(a, b, c, d){
			var json = JSON.parse(fs.readFileSync("/home/arian/www/prime/cov.json").toString() || '{}');
			cb(json, a, b);
			fs.writeFileSync("/home/arian/www/prime/cov.json", JSON.stringify(json, null, 2));
		};
	};
	__$coverInit = update(function(json, name, code){
		if (!json[name]) json[name] = {__code: code};
	});
	__$coverInitRange = update(function(json, name, range){
		if (!json[name][range]) json[name][range] = 0;
	});
	__$coverCall = update(function(json, name, range){
		json[name][range]++;
	});
})(require('fs'));
__$coverInit("index.js", "/*\nprime\n - prototypal inheritance\n*/\"use strict\"\n\nvar hasOwn = require(\"./object/hasOwn\"),\n    forIn  = require(\"./object/forIn\"),\n    mixIn  = require(\"./object/mixIn\"),\n    filter = require(\"./object/filter\"),\n    create = require(\"./object/create\"),\n    type   = require(\"./type\")\n\nvar defineProperty           = Object.defineProperty,\n    getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor\n\ntry {\n    defineProperty({}, \"~\", {})\n    getOwnPropertyDescriptor({}, \"~\")\n} catch (e){\n    defineProperty = null\n    getOwnPropertyDescriptor = null\n}\n\nvar define = function(value, key, from){\n    defineProperty(this, key, getOwnPropertyDescriptor(from, key) || {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: value\n    })\n}\n\nvar copy = function(value, key){\n    this[key] = value\n}\n\nvar implement = function(proto){\n    forIn(proto, defineProperty ? define : copy, this.prototype)\n    return this\n}\n\nvar verbs = /^constructor|inherits|mixin$/\n\nvar prime = function(proto){\n\n    if (type(proto) === \"function\") proto = {constructor: proto}\n\n    var superprime = proto.inherits\n\n    // if our nice proto object has no own constructor property\n    // then we proceed using a ghosting constructor that all it does is\n    // call the parent's constructor if it has a superprime, else an empty constructor\n    // proto.constructor becomes the effective constructor\n    var constructor = (hasOwn(proto, \"constructor\")) ? proto.constructor : (superprime) ? function(){\n        return superprime.apply(this, arguments)\n    } : function(){}\n\n    if (superprime){\n\n        mixIn(constructor, superprime)\n\n        var superproto = superprime.prototype\n        // inherit from superprime\n        var cproto = constructor.prototype = create(superproto)\n\n        // setting constructor.parent to superprime.prototype\n        // because it's the shortest possible absolute reference\n        constructor.parent = superproto\n        cproto.constructor = constructor\n    }\n\n    if (!constructor.implement) constructor.implement = implement\n\n    var mixins = proto.mixin\n    if (mixins){\n        if (type(mixins) !== \"array\") mixins = [mixins]\n        for (var i = 0; i < mixins.length; i++) constructor.implement(create(mixins[i].prototype))\n    }\n\n    // implement proto and return constructor\n    return constructor.implement(filter(proto, function(value, key){\n        return !key.match(verbs)\n    }))\n\n}\n\nmodule.exports = prime\n");
__$coverInitRange("index.js", "37:50");
__$coverInitRange("index.js", "51:285");
__$coverInitRange("index.js", "286:403");
__$coverInitRange("index.js", "404:555");
__$coverInitRange("index.js", "558:778");
__$coverInitRange("index.js", "779:836");
__$coverInitRange("index.js", "837:953");
__$coverInitRange("index.js", "954:997");
__$coverInitRange("index.js", "998:2443");
__$coverInitRange("index.js", "2444:2466");
__$coverInitRange("index.js", "414:445");
__$coverInitRange("index.js", "446:479");
__$coverInitRange("index.js", "497:522");
__$coverInitRange("index.js", "523:554");
__$coverInitRange("index.js", "603:775");
__$coverInitRange("index.js", "816:833");
__$coverInitRange("index.js", "874:938");
__$coverInitRange("index.js", "939:950");
__$coverInitRange("index.js", "1032:1097");
__$coverInitRange("index.js", "1098:1416");
__$coverInitRange("index.js", "1417:1589");
__$coverInitRange("index.js", "1590:2006");
__$coverInitRange("index.js", "2013:2079");
__$coverInitRange("index.js", "2080:2108");
__$coverInitRange("index.js", "2109:2281");
__$coverInitRange("index.js", "2334:2440");
__$coverInitRange("index.js", "1523:1567");
__$coverInitRange("index.js", "1616:1655");
__$coverInitRange("index.js", "1656:1736");
__$coverInitRange("index.js", "1737:1928");
__$coverInitRange("index.js", "1929:1968");
__$coverInitRange("index.js", "1969:2005");
__$coverInitRange("index.js", "2130:2185");
__$coverInitRange("index.js", "2186:2280");
__$coverInitRange("index.js", "2407:2435");
__$coverCall('index.js', '37:50');
'use strict';
__$coverCall('index.js', '51:285');
var hasOwn = require('./object/hasOwn'), forIn = require('./object/forIn'), mixIn = require('./object/mixIn'), filter = require('./object/filter'), create = require('./object/create'), type = require('./type');
__$coverCall('index.js', '286:403');
var defineProperty = Object.defineProperty, getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
__$coverCall('index.js', '404:555');
try {
    __$coverCall('index.js', '414:445');
    defineProperty({}, '~', {});
    __$coverCall('index.js', '446:479');
    getOwnPropertyDescriptor({}, '~');
} catch (e) {
    __$coverCall('index.js', '497:522');
    defineProperty = null;
    __$coverCall('index.js', '523:554');
    getOwnPropertyDescriptor = null;
}
__$coverCall('index.js', '558:778');
var define = function (value, key, from) {
    __$coverCall('index.js', '603:775');
    defineProperty(this, key, getOwnPropertyDescriptor(from, key) || {
        writable: true,
        enumerable: true,
        configurable: true,
        value: value
    });
};
__$coverCall('index.js', '779:836');
var copy = function (value, key) {
    __$coverCall('index.js', '816:833');
    this[key] = value;
};
__$coverCall('index.js', '837:953');
var implement = function (proto) {
    __$coverCall('index.js', '874:938');
    forIn(proto, defineProperty ? define : copy, this.prototype);
    __$coverCall('index.js', '939:950');
    return this;
};
__$coverCall('index.js', '954:997');
var verbs = /^constructor|inherits|mixin$/;
__$coverCall('index.js', '998:2443');
var prime = function (proto) {
    __$coverCall('index.js', '1032:1097');
    if (type(proto) === 'function')
        proto = { constructor: proto };
    __$coverCall('index.js', '1098:1416');
    var superprime = proto.inherits;
    __$coverCall('index.js', '1417:1589');
    var constructor = hasOwn(proto, 'constructor') ? proto.constructor : superprime ? function () {
            __$coverCall('index.js', '1523:1567');
            return superprime.apply(this, arguments);
        } : function () {
        };
    __$coverCall('index.js', '1590:2006');
    if (superprime) {
        __$coverCall('index.js', '1616:1655');
        mixIn(constructor, superprime);
        __$coverCall('index.js', '1656:1736');
        var superproto = superprime.prototype;
        __$coverCall('index.js', '1737:1928');
        var cproto = constructor.prototype = create(superproto);
        __$coverCall('index.js', '1929:1968');
        constructor.parent = superproto;
        __$coverCall('index.js', '1969:2005');
        cproto.constructor = constructor;
    }
    __$coverCall('index.js', '2013:2079');
    if (!constructor.implement)
        constructor.implement = implement;
    __$coverCall('index.js', '2080:2108');
    var mixins = proto.mixin;
    __$coverCall('index.js', '2109:2281');
    if (mixins) {
        __$coverCall('index.js', '2130:2185');
        if (type(mixins) !== 'array')
            mixins = [mixins];
        __$coverCall('index.js', '2186:2280');
        for (var i = 0; i < mixins.length; i++)
            constructor.implement(create(mixins[i].prototype));
    }
    __$coverCall('index.js', '2334:2440');
    return constructor.implement(filter(proto, function (value, key) {
        __$coverCall('index.js', '2407:2435');
        return !key.match(verbs);
    }));
};
__$coverCall('index.js', '2444:2466');
module.exports = prime;