var __$coverCall, __$coverInit, __$coverInitRange;
(function(fs){
	"use strict";
	var update = function(cb){
		return function(a, b, c, d){
			var json = JSON.parse(fs.readFileSync("/home/arian/www/prime/cov.json").toString() || '{}');
			cb(json, a, b);
			fs.writeFileSync("/home/arian/www/prime/cov.json", JSON.stringify(json, null, 2));
		};
	};
	__$coverInit = update(function(json, name, code){
		if (!json[name]) json[name] = {__code: code};
	});
	__$coverInitRange = update(function(json, name, range){
		if (!json[name][range]) json[name][range] = 0;
	});
	__$coverCall = update(function(json, name, range){
		json[name][range]++;
	});
})(require('fs'));
__$coverInit("object/some.js", "/*\nobject:some\n*/\"use strict\"\n\nvar forIn = require(\"./forIn\")\n\nvar some = function(self, method, context){\n    var some = false\n    forIn(self, function(value, key){\n        if (!some && method.call(context, value, key, self)) return !(some = true)\n    })\n    return some\n}\n\nmodule.exports = some\n");
__$coverInitRange("object/some.js", "17:30");
__$coverInitRange("object/some.js", "31:62");
__$coverInitRange("object/some.js", "63:274");
__$coverInitRange("object/some.js", "275:296");
__$coverInitRange("object/some.js", "111:131");
__$coverInitRange("object/some.js", "132:259");
__$coverInitRange("object/some.js", "260:271");
__$coverInitRange("object/some.js", "174:252");
__$coverCall('object/some.js', '17:30');
'use strict';
__$coverCall('object/some.js', '31:62');
var forIn = require('./forIn');
__$coverCall('object/some.js', '63:274');
var some = function (self, method, context) {
    __$coverCall('object/some.js', '111:131');
    var some = false;
    __$coverCall('object/some.js', '132:259');
    forIn(self, function (value, key) {
        __$coverCall('object/some.js', '174:252');
        if (!some && method.call(context, value, key, self))
            return !(some = true);
    });
    __$coverCall('object/some.js', '260:271');
    return some;
};
__$coverCall('object/some.js', '275:296');
module.exports = some;