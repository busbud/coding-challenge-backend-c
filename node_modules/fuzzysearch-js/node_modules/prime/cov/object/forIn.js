var __$coverCall, __$coverInit, __$coverInitRange;
(function(fs){
	"use strict";
	var update = function(cb){
		return function(a, b, c, d){
			var json = JSON.parse(fs.readFileSync("/home/arian/www/prime/cov.json").toString() || '{}');
			cb(json, a, b);
			fs.writeFileSync("/home/arian/www/prime/cov.json", JSON.stringify(json, null, 2));
		};
	};
	__$coverInit = update(function(json, name, code){
		if (!json[name]) json[name] = {__code: code};
	});
	__$coverInitRange = update(function(json, name, range){
		if (!json[name][range]) json[name][range] = 0;
	});
	__$coverCall = update(function(json, name, range){
		json[name][range]++;
	});
})(require('fs'));
__$coverInit("object/forIn.js", "/*\nobject:forIn\n*/\"use strict\"\n\nvar has = require(\"./hasOwn\")\n\nvar forIn = function(self, method, context){\n    for (var key in self) if (method.call(context, self[key], key, self) === false) break\n    return self\n}\n\nif (!({valueOf: 0}).propertyIsEnumerable(\"valueOf\")){ // fix for stupid IE enumeration bug\n\n    var buggy = \"constructor,toString,valueOf,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString\".split(\",\")\n    var proto = Object.prototype\n\n    forIn = function(self, method, context){\n        for (var key in self) if (method.call(context, self[key], key, self) === false) return self\n        for (var i = 0; key = buggy[i]; i++){\n            var value = self[key]\n            if ((value !== proto[key] || has(self, key)) && method.call(context, value, key, self) === false) break\n        }\n        return self\n    }\n\n}\n\nmodule.exports = forIn\n");
__$coverInitRange("object/forIn.js", "18:31");
__$coverInitRange("object/forIn.js", "32:62");
__$coverInitRange("object/forIn.js", "63:216");
__$coverInitRange("object/forIn.js", "217:844");
__$coverInitRange("object/forIn.js", "847:869");
__$coverInitRange("object/forIn.js", "112:196");
__$coverInitRange("object/forIn.js", "202:213");
__$coverInitRange("object/forIn.js", "313:435");
__$coverInitRange("object/forIn.js", "436:469");
__$coverInitRange("object/forIn.js", "470:843");
__$coverInitRange("object/forIn.js", "519:618");
__$coverInitRange("object/forIn.js", "619:815");
__$coverInitRange("object/forIn.js", "825:840");
__$coverInitRange("object/forIn.js", "669:702");
__$coverInitRange("object/forIn.js", "703:805");
__$coverCall('object/forIn.js', '18:31');
'use strict';
__$coverCall('object/forIn.js', '32:62');
var has = require('./hasOwn');
__$coverCall('object/forIn.js', '63:216');
var forIn = function (self, method, context) {
    __$coverCall('object/forIn.js', '112:196');
    for (var key in self)
        if (method.call(context, self[key], key, self) === false)
            break;
    __$coverCall('object/forIn.js', '202:213');
    return self;
};
__$coverCall('object/forIn.js', '217:844');
if (!{ valueOf: 0 }.propertyIsEnumerable('valueOf')) {
    __$coverCall('object/forIn.js', '313:435');
    var buggy = 'constructor,toString,valueOf,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString'.split(',');
    __$coverCall('object/forIn.js', '436:469');
    var proto = Object.prototype;
    __$coverCall('object/forIn.js', '470:843');
    forIn = function (self, method, context) {
        __$coverCall('object/forIn.js', '519:618');
        for (var key in self)
            if (method.call(context, self[key], key, self) === false)
                return self;
        __$coverCall('object/forIn.js', '619:815');
        for (var i = 0; key = buggy[i]; i++) {
            __$coverCall('object/forIn.js', '669:702');
            var value = self[key];
            __$coverCall('object/forIn.js', '703:805');
            if ((value !== proto[key] || has(self, key)) && method.call(context, value, key, self) === false)
                break;
        }
        __$coverCall('object/forIn.js', '825:840');
        return self;
    };
}
__$coverCall('object/forIn.js', '847:869');
module.exports = forIn;