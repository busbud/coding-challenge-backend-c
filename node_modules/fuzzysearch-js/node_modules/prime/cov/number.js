var __$coverCall, __$coverInit, __$coverInitRange;
(function(fs){
	"use strict";
	var update = function(cb){
		return function(a, b, c, d){
			var json = JSON.parse(fs.readFileSync("/home/arian/www/prime/cov.json").toString() || '{}');
			cb(json, a, b);
			fs.writeFileSync("/home/arian/www/prime/cov.json", JSON.stringify(json, null, 2));
		};
	};
	__$coverInit = update(function(json, name, code){
		if (!json[name]) json[name] = {__code: code};
	});
	__$coverInitRange = update(function(json, name, range){
		if (!json[name][range]) json[name][range] = 0;
	});
	__$coverCall = update(function(json, name, range){
		json[name][range]++;
	});
})(require('fs'));
__$coverInit("number.js", "/*\nnumber\n - number es5 shell\n*/\"use strict\"\n\nvar number = require(\"./_shell\")[\"number\"]\nvar proto = Number.prototype\n\nnumber.implement({\n    toExponential: proto.toExponential,\n    toFixed: proto.toFixed,\n    toPrecision: proto.toPrecision\n})\n\nnumber.extend({\n    limit:  require(\"./number/limit\"),\n    random: require(\"./number/random\"),\n    round:  require(\"./number/round\"),\n    times:  require(\"./number/times\")\n})\n\nmodule.exports = number\n");
__$coverInitRange("number.js", "32:45");
__$coverInitRange("number.js", "46:88");
__$coverInitRange("number.js", "89:118");
__$coverInitRange("number.js", "119:244");
__$coverInitRange("number.js", "245:420");
__$coverInitRange("number.js", "421:444");
__$coverCall('number.js', '32:45');
'use strict';
__$coverCall('number.js', '46:88');
var number = require('./_shell')['number'];
__$coverCall('number.js', '89:118');
var proto = Number.prototype;
__$coverCall('number.js', '119:244');
number.implement({
    toExponential: proto.toExponential,
    toFixed: proto.toFixed,
    toPrecision: proto.toPrecision
});
__$coverCall('number.js', '245:420');
number.extend({
    limit: require('./number/limit'),
    random: require('./number/random'),
    round: require('./number/round'),
    times: require('./number/times')
});
__$coverCall('number.js', '421:444');
module.exports = number;