var __$coverCall, __$coverInit, __$coverInitRange;
(function(fs){
	"use strict";
	var update = function(cb){
		return function(a, b, c, d){
			var json = JSON.parse(fs.readFileSync("/home/arian/www/prime/cov.json").toString() || '{}');
			cb(json, a, b);
			fs.writeFileSync("/home/arian/www/prime/cov.json", JSON.stringify(json, null, 2));
		};
	};
	__$coverInit = update(function(json, name, code){
		if (!json[name]) json[name] = {__code: code};
	});
	__$coverInitRange = update(function(json, name, range){
		if (!json[name][range]) json[name][range] = 0;
	});
	__$coverCall = update(function(json, name, range){
		json[name][range]++;
	});
})(require('fs'));
__$coverInit("array.js", "/*\narray\n*/\"use strict\"\n\nvar array = require(\"./_shell\")[\"array\"]\nvar proto = Array.prototype\n\narray.implement({\n    concat:   proto.concat,\n    join:     proto.join,\n    pop:      proto.pop,\n    push:     proto.push,\n    reverse:  proto.reverse,\n    shift:    proto.shift,\n    slice:    proto.slice,\n    sort:     proto.sort,\n    splice:   proto.splice,\n    toString: proto.toString,\n    unshift:  proto.unshift\n})\n\narray.extend({\n    every:       require(\"./array/every\"),\n    filter:      require(\"./array/filter\"),\n    forEach:     require(\"./array/forEach\"),\n    indexOf:     require(\"./array/indexOf\"),\n    lastIndexOf: require(\"./array/lastIndexOf\"),\n    map:         require(\"./array/map\"),\n    remove:      require(\"./array/remove\"),\n    some:        require(\"./array/some\"),\n    unset:       require(\"./array/unset\")\n})\n\nmodule.exports = array\n");
__$coverInitRange("array.js", "11:24");
__$coverInitRange("array.js", "25:65");
__$coverInitRange("array.js", "66:94");
__$coverInitRange("array.js", "95:416");
__$coverInitRange("array.js", "417:830");
__$coverInitRange("array.js", "831:853");
__$coverCall('array.js', '11:24');
'use strict';
__$coverCall('array.js', '25:65');
var array = require('./_shell')['array'];
__$coverCall('array.js', '66:94');
var proto = Array.prototype;
__$coverCall('array.js', '95:416');
array.implement({
    concat: proto.concat,
    join: proto.join,
    pop: proto.pop,
    push: proto.push,
    reverse: proto.reverse,
    shift: proto.shift,
    slice: proto.slice,
    sort: proto.sort,
    splice: proto.splice,
    toString: proto.toString,
    unshift: proto.unshift
});
__$coverCall('array.js', '417:830');
array.extend({
    every: require('./array/every'),
    filter: require('./array/filter'),
    forEach: require('./array/forEach'),
    indexOf: require('./array/indexOf'),
    lastIndexOf: require('./array/lastIndexOf'),
    map: require('./array/map'),
    remove: require('./array/remove'),
    some: require('./array/some'),
    unset: require('./array/unset')
});
__$coverCall('array.js', '831:853');
module.exports = array;