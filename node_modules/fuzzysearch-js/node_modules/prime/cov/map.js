var __$coverCall, __$coverInit, __$coverInitRange;
(function(fs){
	"use strict";
	var update = function(cb){
		return function(a, b, c, d){
			var json = JSON.parse(fs.readFileSync("/home/arian/www/prime/cov.json").toString() || '{}');
			cb(json, a, b);
			fs.writeFileSync("/home/arian/www/prime/cov.json", JSON.stringify(json, null, 2));
		};
	};
	__$coverInit = update(function(json, name, code){
		if (!json[name]) json[name] = {__code: code};
	});
	__$coverInitRange = update(function(json, name, range){
		if (!json[name][range]) json[name][range] = 0;
	});
	__$coverCall = update(function(json, name, range){
		json[name][range]++;
	});
})(require('fs'));
__$coverInit("map.js", "/*\nMap\n*/\"use strict\"\n\nvar prime   = require(\"./index\"),\n    indexOf = require(\"./array/indexOf\")\n\nvar Map = prime({\n\n    constructor: function(){\n        if (!this instanceof Map) return new Map\n        this.length = 0\n        this._values = []\n        this._keys = []\n    },\n\n    set: function(key, value){\n        var index = indexOf(this._keys, key)\n\n        if (index === -1){\n            this._keys.push(key)\n            this._values.push(value)\n            this.length++\n        } else {\n            this._values[index] = value\n        }\n\n        return this\n    },\n\n    get: function(key){\n        var index = indexOf(this._keys, key)\n        return (index === -1) ? null : this._values[index]\n    },\n\n    count: function(){\n        return this.length\n    },\n\n    forEach: function(method, context){\n        for (var i = 0, l = this.length; i < l; i++){\n            if (method.call(context, this._values[i], this._keys[i], this) === false) break\n        }\n        return this\n    },\n\n    map: function(method, context){\n        var results = new Map\n        this.forEach(function(value, key){\n            results.set(key, method.call(context, value, key, this))\n        }, this)\n        return results\n    },\n\n    filter: function(method, context){\n        var results = new Map\n        this.forEach(function(value, key){\n            if (method.call(context, value, key, this)) results.set(key, value)\n        }, this)\n        return results\n    },\n\n    every: function(method, context){\n        var every = true\n        this.forEach(function(value, key){\n            if (!method.call(context, value, key, this)) return (every = false)\n        }, this)\n        return every\n    },\n\n    some: function(method, context){\n        var some = false\n        this.forEach(function(value, key){\n            if (method.call(context, value, key, this)) return !(some = true)\n        }, this)\n        return some\n    },\n\n    indexOf: function(value){\n        var index = indexOf(this._values, value)\n        return (index > -1) ? this._keys[index] : null\n    },\n\n    remove: function(value){\n        var index = indexOf(this._values, value)\n\n        if (index !== -1){\n            this._values.splice(index, 1)\n            this.length--\n            return this._keys.splice(index, 1)[0]\n        }\n\n        return null\n    },\n\n    unset: function(key){\n        var index = indexOf(this._keys, key)\n\n        if (index !== -1){\n            this._keys.splice(index, 1)\n            this.length--\n            return this._values.splice(index, 1)[0]\n        }\n\n        return null\n    },\n\n    keys: function(){\n        return this._keys.slice()\n    },\n\n    values: function(){\n        return this._values.slice()\n    }\n\n})\n\nmodule.exports = Map\n");
__$coverInitRange("map.js", "9:22");
__$coverInitRange("map.js", "23:98");
__$coverInitRange("map.js", "99:2713");
__$coverInitRange("map.js", "2714:2734");
__$coverInitRange("map.js", "155:203");
__$coverInitRange("map.js", "204:227");
__$coverInitRange("map.js", "228:253");
__$coverInitRange("map.js", "254:273");
__$coverInitRange("map.js", "317:362");
__$coverInitRange("map.js", "363:543");
__$coverInitRange("map.js", "554:569");
__$coverInitRange("map.js", "394:426");
__$coverInitRange("map.js", "427:463");
__$coverInitRange("map.js", "464:485");
__$coverInitRange("map.js", "507:542");
__$coverInitRange("map.js", "606:650");
__$coverInitRange("map.js", "651:705");
__$coverInitRange("map.js", "741:763");
__$coverInitRange("map.js", "816:962");
__$coverInitRange("map.js", "972:987");
__$coverInitRange("map.js", "874:952");
__$coverInitRange("map.js", "1036:1065");
__$coverInitRange("map.js", "1066:1194");
__$coverInitRange("map.js", "1195:1213");
__$coverInitRange("map.js", "1113:1177");
__$coverInitRange("map.js", "1265:1294");
__$coverInitRange("map.js", "1295:1434");
__$coverInitRange("map.js", "1435:1453");
__$coverInitRange("map.js", "1342:1417");
__$coverInitRange("map.js", "1504:1528");
__$coverInitRange("map.js", "1529:1668");
__$coverInitRange("map.js", "1669:1685");
__$coverInitRange("map.js", "1576:1651");
__$coverInitRange("map.js", "1735:1759");
__$coverInitRange("map.js", "1760:1897");
__$coverInitRange("map.js", "1898:1913");
__$coverInitRange("map.js", "1807:1880");
__$coverInitRange("map.js", "1956:2004");
__$coverInitRange("map.js", "2005:2055");
__$coverInitRange("map.js", "2097:2146");
__$coverInitRange("map.js", "2147:2292");
__$coverInitRange("map.js", "2303:2318");
__$coverInitRange("map.js", "2178:2219");
__$coverInitRange("map.js", "2220:2245");
__$coverInitRange("map.js", "2246:2291");
__$coverInitRange("map.js", "2357:2402");
__$coverInitRange("map.js", "2403:2548");
__$coverInitRange("map.js", "2559:2574");
__$coverInitRange("map.js", "2434:2473");
__$coverInitRange("map.js", "2474:2499");
__$coverInitRange("map.js", "2500:2547");
__$coverInitRange("map.js", "2609:2638");
__$coverInitRange("map.js", "2675:2706");
__$coverCall('map.js', '9:22');
'use strict';
__$coverCall('map.js', '23:98');
var prime = require('./index'), indexOf = require('./array/indexOf');
__$coverCall('map.js', '99:2713');
var Map = prime({
        constructor: function () {
            __$coverCall('map.js', '155:203');
            if (!this instanceof Map)
                return new Map();
            __$coverCall('map.js', '204:227');
            this.length = 0;
            __$coverCall('map.js', '228:253');
            this._values = [];
            __$coverCall('map.js', '254:273');
            this._keys = [];
        },
        set: function (key, value) {
            __$coverCall('map.js', '317:362');
            var index = indexOf(this._keys, key);
            __$coverCall('map.js', '363:543');
            if (index === -1) {
                __$coverCall('map.js', '394:426');
                this._keys.push(key);
                __$coverCall('map.js', '427:463');
                this._values.push(value);
                __$coverCall('map.js', '464:485');
                this.length++;
            } else {
                __$coverCall('map.js', '507:542');
                this._values[index] = value;
            }
            __$coverCall('map.js', '554:569');
            return this;
        },
        get: function (key) {
            __$coverCall('map.js', '606:650');
            var index = indexOf(this._keys, key);
            __$coverCall('map.js', '651:705');
            return index === -1 ? null : this._values[index];
        },
        count: function () {
            __$coverCall('map.js', '741:763');
            return this.length;
        },
        forEach: function (method, context) {
            __$coverCall('map.js', '816:962');
            for (var i = 0, l = this.length; i < l; i++) {
                __$coverCall('map.js', '874:952');
                if (method.call(context, this._values[i], this._keys[i], this) === false)
                    break;
            }
            __$coverCall('map.js', '972:987');
            return this;
        },
        map: function (method, context) {
            __$coverCall('map.js', '1036:1065');
            var results = new Map();
            __$coverCall('map.js', '1066:1194');
            this.forEach(function (value, key) {
                __$coverCall('map.js', '1113:1177');
                results.set(key, method.call(context, value, key, this));
            }, this);
            __$coverCall('map.js', '1195:1213');
            return results;
        },
        filter: function (method, context) {
            __$coverCall('map.js', '1265:1294');
            var results = new Map();
            __$coverCall('map.js', '1295:1434');
            this.forEach(function (value, key) {
                __$coverCall('map.js', '1342:1417');
                if (method.call(context, value, key, this))
                    results.set(key, value);
            }, this);
            __$coverCall('map.js', '1435:1453');
            return results;
        },
        every: function (method, context) {
            __$coverCall('map.js', '1504:1528');
            var every = true;
            __$coverCall('map.js', '1529:1668');
            this.forEach(function (value, key) {
                __$coverCall('map.js', '1576:1651');
                if (!method.call(context, value, key, this))
                    return every = false;
            }, this);
            __$coverCall('map.js', '1669:1685');
            return every;
        },
        some: function (method, context) {
            __$coverCall('map.js', '1735:1759');
            var some = false;
            __$coverCall('map.js', '1760:1897');
            this.forEach(function (value, key) {
                __$coverCall('map.js', '1807:1880');
                if (method.call(context, value, key, this))
                    return !(some = true);
            }, this);
            __$coverCall('map.js', '1898:1913');
            return some;
        },
        indexOf: function (value) {
            __$coverCall('map.js', '1956:2004');
            var index = indexOf(this._values, value);
            __$coverCall('map.js', '2005:2055');
            return index > -1 ? this._keys[index] : null;
        },
        remove: function (value) {
            __$coverCall('map.js', '2097:2146');
            var index = indexOf(this._values, value);
            __$coverCall('map.js', '2147:2292');
            if (index !== -1) {
                __$coverCall('map.js', '2178:2219');
                this._values.splice(index, 1);
                __$coverCall('map.js', '2220:2245');
                this.length--;
                __$coverCall('map.js', '2246:2291');
                return this._keys.splice(index, 1)[0];
            }
            __$coverCall('map.js', '2303:2318');
            return null;
        },
        unset: function (key) {
            __$coverCall('map.js', '2357:2402');
            var index = indexOf(this._keys, key);
            __$coverCall('map.js', '2403:2548');
            if (index !== -1) {
                __$coverCall('map.js', '2434:2473');
                this._keys.splice(index, 1);
                __$coverCall('map.js', '2474:2499');
                this.length--;
                __$coverCall('map.js', '2500:2547');
                return this._values.splice(index, 1)[0];
            }
            __$coverCall('map.js', '2559:2574');
            return null;
        },
        keys: function () {
            __$coverCall('map.js', '2609:2638');
            return this._keys.slice();
        },
        values: function () {
            __$coverCall('map.js', '2675:2706');
            return this._values.slice();
        }
    });
__$coverCall('map.js', '2714:2734');
module.exports = Map;