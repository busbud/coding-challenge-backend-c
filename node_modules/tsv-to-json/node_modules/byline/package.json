{
  "name": "byline",
  "description": "super-simple line-by-line Stream reader",
  "homepage": "https://github.com/jahewson/node-byline",
  "bugs": {
    "url": "https://github.com/jahewson/node-byline/issues"
  },
  "version": "2.0.3",
  "author": {
    "name": "John Hewson"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jahewson/node-byline"
  },
  "engine": [
    "node >=0.4.0"
  ],
  "main": "./lib",
  "readme": "# byline -- buffered Stream for reading lines\n\n`byline` is a super-simple module providing a `LineStream` for [node.js](http://nodejs.org/).\n\n- supports `pipe`\n- supports both UNIX and Windows line endings\n- can wrap any readable stream\n- can be used as a readable-writable \"through-stream\"\n- super-simple: `stream = byline(stream);`\n\n## Install\n\n    npm install byline\n\nor from source:\n\n    git clone git://github.com/jahewson/node-byline.git\n\tcd node-byline\n\tnpm link\n\n#Convenience API\n\nThe `byline` module can be used as a function to quickly wrap a readable stream:\n\n```javascript\nvar fs = require('fs'),\n    byline = require('byline');\n\nvar stream = byline(fs.createReadStream('sample.txt'));\n```\n\nThe `data` event then emits lines:\n\n```javascript\nstream.on('data', function(line) {\n  console.log(line);\n});\n```\n\n#Standard API\n    \nYou just need to add one line to wrap your readable `Stream` with a `LineStream`.\n\n```javascript\nvar fs = require('fs'),\t\n    byline = require('byline');\n\nvar stream = fs.createReadStream('sample.txt');\nstream = byline.createStream(stream);\n\nstream.on('data', function(line) {\n  console.log(line);\n});\n```\n\n#Piping\n\n`byline` supports `pipe` (though it strips the line endings, of course). When piping into a stream, the `pause()` and `resume()` \nmethods are supported by the `LineStream`, and pass on the call to the original stream.\n\n```javascript\nvar stream = fs.createReadStream('sample.txt');\nstream = byline.createLineStream(stream);\nstream.pipe(fs.createWriteStream('nolines.txt'));\n```\n\nAlternatively, you can create a readable/writable \"through-stream\" which doesn't wrap any specific stream:\n\n```javascript\nvar stream = fs.createReadStream('sample.txt');\nstream = byline.createLineStream(stream);\nstream.pipe(fs.createWriteStream('nolines.txt'));\n\t\nvar input = fs.createReadStream('LICENSE');\nvar lineStream = byline.createStream();\ninput.pipe(lineStream);\n\nvar output = fs.createWriteStream('test.txt');\nlineStream.pipe(output);\n```\n\n#Simple\nUnlike other modules (of which there are many), `byline` contains no:\n\n- monkeypatching\n- dependencies\n- non-standard 'line' events which break `pipe`\n- limitations to only file streams\n- CoffeeScript\n- mostly unnecessary code",
  "readmeFilename": "README.md",
  "_id": "byline@2.0.3",
  "dist": {
    "shasum": "a13f4189460c06934e5c51a425ec11d9bb18156c"
  },
  "_from": "byline@~2.0.3",
  "_resolved": "https://registry.npmjs.org/byline/-/byline-2.0.3.tgz"
}
